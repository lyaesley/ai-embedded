spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/n8n
    username: n8n
    password: "@tndmsgh2122"
    driver-class-name: org.postgresql.Driver

  # JPA
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true  # SQL 주석 추가
        highlight_sql: true     # SQL 하이라이팅 (콘솔에서)
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          # PGvector
          lob:
            non_contextual_creation: true

  # Spring AI
  ai:
    openai:
      api-key: ${OPENAI_API_KEY:your-api-key-here}
      chat:
        options:
          model: gpt-4o-mini
          temperature: 0.7
      embedding:
        options:
          model: text-embedding-3-small

    # Vector Store
    vectorstore:
      pgvector:
        index-type: HNSW
        distance-type: COSINE_DISTANCE
        dimensions: 1536
        table-name: vector_store
        schema-name: public

logging:
  level:
    org.springframework.ai: DEBUG
    org.springframework.jdbc: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: DEBUG
    org.springframework.jdbc.core.JdbcTemplate: DEBUG
    org.springframework.jdbc.core.StatementCreatorUtils: DEBUG
  pattern:
    console: "%clr(%d{HH:mm:ss.SSS}){faint} %clr(%5p) %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
    file: "%d{ISO8601} [%thread] %-5level %logger{36} - %msg%n"

server:
  port: 8080